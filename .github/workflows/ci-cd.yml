name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Reset Docker builder
        run: |
          docker buildx rm mybuilder || true
          docker buildx create --use --name mybuilder

      - name: Docker login
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build backend images
        run: |
          docker buildx build --builder mybuilder --load -t towfiqueahmmed/restauranty-auth:${{ github.sha }} ./backend/auth
          docker buildx build --builder mybuilder --load -t towfiqueahmmed/restauranty-discounts:${{ github.sha }} ./backend/discounts
          docker buildx build --builder mybuilder --load -t towfiqueahmmed/restauranty-items:${{ github.sha }} ./backend/items

      - name: Build frontend image
        working-directory: ./client
        run: |
          cat <<-EOF > .env.production
            REACT_APP_API_URL=http://2fik.diogohack.shop
            REACT_APP_SERVER_AUTH_URL=http://auth.2fik.diogohack.shop
            REACT_APP_SERVER_ITEMS_URL=http://items.2fik.diogohack.shop
            REACT_APP_SERVER_DISCOUNTS_URL=http://discounts.2fik.diogohack.shop
          EOF
          npm ci
          CI=false npm run build
          docker buildx build --builder mybuilder --load -t towfiqueahmmed/restauranty-client:${{ github.sha }} .

      - name: Run tests
        run: |
          echo "Run your tests here"

      - name: Verify images
        run: docker images

      - name: Push images
        run: |
          for img in auth discounts items client; do
            docker push towfiqueahmmed/restauranty-$img:${{ github.sha }}
          done

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

      - name: Deploy images to AKS
        run: |
          kubectl set image deployment/auth-deployment auth=towfiqueahmmed/restauranty-auth:${{ github.sha }}
          kubectl set image deployment/discounts-deployment discounts=towfiqueahmmed/restauranty-discounts:${{ github.sha }}
          kubectl set image deployment/items-deployment items=towfiqueahmmed/restauranty-items:${{ github.sha }}
          kubectl set image deployment/client-deployment client=towfiqueahmmed/restauranty-client:${{ github.sha }}
